@using Microsoft.AspNetCore.Components.Forms
@using BlazorClient.ViewModel
@using Microsoft.JSInterop;

@inject IJSRuntime _jsRuntime;

@page "/employee"



<EditForm Model=SelectedEmployee OnValidSubmit=OnSubmit>
<DataAnnotationsValidator/>
<h2 class="mt-5 text-center header">Employee's Details</h2>
<div style="width: 50%; height: 20%; margin: 3% auto auto auto;">
    <table  class="table table-bordered border-2 border-secondary" >
  <tbody>
      <tr style="display: @Visibility">
          <th scope="row">Select Employee:</th>
          <td><select id="employee" class="form-control border-3 border-dark"   @bind-value="EmployeeId" @bind-value:event="oninput"   @onchange=SelectionChanged >
              <option value="0" selected>Please select a employee!</option>
				@foreach(var employee in Employees)
				{
					<option value="@employee.Id" >@employee.FullName</option>
				}
			</select>
            </td>
      </tr>
    <tr>
      <th scope="row">First name:</th>
      <td><InputText @bind-Value=SelectedEmployee.FirstName class="form-control" style="background-color: transparent"/></td>
    </tr>
    <tr>
      <th scope="row">Last name:</th>
      <td><InputText @bind-Value=SelectedEmployee.LastName class="form-control" style="background-color: transparent"/></td>
    </tr>
    <tr>
      <th scope="row">D.O.B</th>
      <td><InputDate @bind-Value=SelectedEmployee.DOB class="form-control" /></td>
    </tr>
    <tr>
      <th scope="row">Phone:</th>
      <td><InputText @bind-Value=SelectedEmployee.Phone class="form-control" style="background-color: transparent"/></td>
    </tr>
    <tr>
      <th scope="row">Email:</th>
      <td><InputText @bind-Value=SelectedEmployee.Email class="form-control" style="background-color: transparent"/></td>
    </tr>
    <tr>
        <td colspan="2"><button class="btn btn-danger" style="width:39%; margin-right: 0.5%" type="button" @onclick=SetAction>@this.Action</button>
           <button class="btn btn-primary" style="width: 59%;" type="submit">Submit</button> </td>
    </tr>
  </tbody>
</table>
</div>
</EditForm>

@code {
    public Employee SelectedEmployee { get; set; } = new();
    public IEnumerable<Employee> Employees = new List<Employee>();
    public int EmployeeId { get; set; }
    public string Visibility { get; set; } = "None";
    public string Action { get; set; } = "Edit Details";

    protected override void OnInitialized()
    {
        LoadData();
    }
    public void OnSubmit()
    {

    }
    public async void SetAction()
    {
        //To clear all fields and selection
        SelectedEmployee = new Employee();
        EmployeeId = 0;
        
        Action = Action == "New Employee" ? "Edit Details" : "New Employee";
        Visibility = Action == "Edit Details" ? "None" : "Normal";
        StateHasChanged();
    }

    public void SelectionChanged(ChangeEventArgs e)
    {
        SelectedEmployee = Employees.Single(e => e.Id == EmployeeId);
    }

    private void LoadData()
    {
        Employees = new List<Employee>()
        {
            new Employee { Id=1, FirstName="O.A.", LastName="Mosco", DOB =new DateTime(1984, 06, 04), Email="oamoacovit", Phone="020805032"},
            new Employee { Id=2, FirstName="Chavi", LastName="Mosco", DOB =new DateTime(1987, 11, 13), Email="chavi@", Phone="020805032"},
            new Employee { Id = 3, FirstName="Fred", LastName="Monkey", DOB =new DateTime(1999, 06, 04), Email="gialdj@", Phone="020805032"}
        };
    }

    //public async Task ClearSelection()
    //{
    //    await _jsRuntime.InvokeVoidAsync("selectIndex", "employee", 0);
    //}
}

